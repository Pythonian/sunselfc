# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-06-20 13:05
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week', models.IntegerField(default=1, verbose_name='Week')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date')),
                ('home_team_score', models.IntegerField(blank=True, null=True, verbose_name='Home team score')),
                ('away_team_score', models.IntegerField(blank=True, null=True, verbose_name='Away team score')),
                ('city', models.CharField(blank=True, max_length=200, null=True, verbose_name='City')),
            ],
            options={
                'verbose_name': 'Game',
                'verbose_name_plural': 'Games',
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('league', models.CharField(max_length=200, null=True, verbose_name='League')),
                ('slug', models.SlugField(null=True, unique=True, verbose_name='Slug')),
                ('standings_order', models.IntegerField(choices=[(0, 'Points, Wins, Lost, Score Lost'), (1, 'Points, Score, Score Lost')], default=0, verbose_name='Standings order')),
                ('win_points', models.IntegerField(default=0, null=True, verbose_name='Points for win')),
                ('lost_points', models.IntegerField(default=0, null=True, verbose_name='Points for loss')),
                ('draw_points', models.IntegerField(default=0, null=True, verbose_name='Points for draw')),
            ],
            options={
                'verbose_name': 'Season',
                'verbose_name_plural': 'Seasons',
            },
        ),
        migrations.CreateModel(
            name='Standings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roster_image', models.ImageField(blank=True, null=True, upload_to='uploads/teams/%Y/%m/%d/rosters/', verbose_name='Roster image')),
                ('position', models.IntegerField(blank=True, default=1, null=True, verbose_name='Position')),
                ('matches', models.IntegerField(blank=True, default=0, null=True, verbose_name='Matches')),
                ('win', models.IntegerField(default=0, null=True, verbose_name='Won')),
                ('lost', models.IntegerField(default=0, null=True, verbose_name='Lost')),
                ('draws', models.IntegerField(default=0, null=True, verbose_name='Draw')),
                ('score', models.IntegerField(default=0, null=True, verbose_name='Score')),
                ('score_lost', models.IntegerField(default=0, null=True, verbose_name='Score lost')),
                ('points', models.IntegerField(default=0, null=True, verbose_name='Points')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league.Season', verbose_name='Season')),
            ],
            options={
                'ordering': ('-points', 'score_lost', '-win', 'lost'),
                'verbose_name': 'Table',
                'verbose_name_plural': 'Tables',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Team name')),
                ('short_name', models.CharField(max_length=50, verbose_name='Team short name')),
                ('slug', models.SlugField(null=True, unique=True, verbose_name='Slug')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='uploads/teams/%Y/%m/%d/', verbose_name='Team logo')),
                ('my_team', models.IntegerField(choices=[(0, 'No'), (1, 'Yes')], default=0, verbose_name='Is this your team?')),
            ],
            options={
                'verbose_name': 'Team',
                'verbose_name_plural': 'Teams',
            },
        ),
        migrations.AddField(
            model_name='standings',
            name='team',
            field=smart_selects.db_fields.ChainedForeignKey(chained_field='season', chained_model_field='teams', on_delete=django.db.models.deletion.CASCADE, related_name='team', to='league.Team', verbose_name='Team'),
        ),
        migrations.AddField(
            model_name='season',
            name='teams',
            field=models.ManyToManyField(blank=True, related_name='teams', to='league.Team', verbose_name='Teams'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='away_team',
            field=smart_selects.db_fields.ChainedForeignKey(chained_field='season', chained_model_field='teams', on_delete=django.db.models.deletion.CASCADE, related_name='away_team', to='league.Team', verbose_name='Away team'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='home_team',
            field=smart_selects.db_fields.ChainedForeignKey(chained_field='season', chained_model_field='teams', on_delete=django.db.models.deletion.CASCADE, related_name='home_team', to='league.Team', verbose_name='Home team'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league.Season', verbose_name='Season'),
        ),
        migrations.AlterUniqueTogether(
            name='standings',
            unique_together=set([('season', 'team')]),
        ),
    ]
